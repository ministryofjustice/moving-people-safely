doctype html
html
  head
    meta charset="utf-8"
    = wicked_pdf_stylesheet_link_tag "print.css", media: 'all'

  body
    main.inner-page
      .grid-row.indicators.top-dotted
        - escort.alerts.each do |alert_name, on|
          .flag
            = render 'escorts/print/alert', alert_name: alert_name, on: on

      div#risk-section.section
        table#risk-table.section-table
          tr
            th colspan=3
              span.heading-large= 'Risk'
              span.timestamp= t('assessment.confirmed_timestamp', name: escort.risk.reviewer.full_name, time: escort.risk.reviewed_at.to_s(:humanized))
              - if escort.from_police?
                span.timestamp= t('assessment.approved_timestamp', name: escort.approver.full_name, time: escort.approved_at.to_s(:humanized))
          - Risk.sections(escort.location).reject { |s| s == 'return_instructions' }.each do |section|
            = render "risks/sections/#{section}",
              views: 'print',
              section: section,
              path: nil,
              assessment: escort.risk

      div#healthcare-section.section
        table#healthcare-table.section-table
          tr
            th colspan=3
              span.heading-large= 'Healthcare'
              span.timestamp= t('assessment.confirmed_timestamp', name: escort.healthcare.reviewer.full_name, time: escort.healthcare.reviewed_at.to_s(:humanized))
              - if escort.from_police?
                span.timestamp= t('assessment.approved_timestamp', name: escort.approver.full_name, time: escort.approved_at.to_s(:humanized))
          - Healthcare.sections(escort.location).each do |section|
            = render "healthcare/sections/#{section}",
              views: 'print',
              section: section,
              path: nil,
              assessment: escort.healthcare

      div#offences-section.section
        table#offences-table.section-table
          tr
            th colspan=3
              span.heading-large= 'Offences'
              span.timestamp= t('assessment.confirmed_timestamp', name: escort.offences_workflow.reviewer.full_name, time: escort.offences_workflow.reviewed_at.to_s(:humanized))
              - if escort.from_police?
                span.timestamp= t('assessment.approved_timestamp', name: escort.approver.full_name, time: escort.approved_at.to_s(:humanized))
          tr.top-dotted
            td.column-30-percent
              = offences_label(escort.offences)
            td.column-20-percent.indented
              = offences_relevant(escort.offences)
            td.column-50-percent
              = formatted_offences_list(escort.offences)

      - if escort.from_prison?
        div#return-section.section
          table#return-table.section-table
            tr
              th colspan=3
                span.heading-large= 'Return instructions'
                span.timestamp= t('assessment.confirmed_timestamp', name: escort.risk.reviewer.full_name, time: escort.risk.reviewed_at.to_s(:humanized))
            = render "shared/sections/print/question_standalone",
              alternance: 'even', assessment: escort.risk, section: 'return_instructions', question: 'must_return',
              value: escort.risk.must_return, details: must_return_details(escort.risk)

            = render "shared/sections/print/question_standalone",
              alternance: 'odd', assessment: escort.risk, section: 'return_instructions', question: 'has_must_not_return_details',
              value: escort.risk.has_must_not_return_details, details: escort.risk.must_not_return_details,
              partial: 'must_not_return_details', multiples: true
