.move
  header
    h1 Move information

  = form_for form, url: submit_path, method: method do |f|
    = f.error_messages

    .form-group
      label.form-label From
      = escort.from_establishment&.name

    .radio-concertina
      .form-group
        fieldset
          legend
            span.form-label-bold To

          - Establishment::ESTABLISHMENT_TYPES.each do |option|
            = f.radio_concertina_option(:to_type, option) do
              label.form-label for=option
                = t(option, scope: 'move.destination_types.prompts')
              - if form.errors["to_#{option}"].any?
                .error
                  .span.error-message
                    = form.errors["to_#{option}"].join(', ')
                  = f.select "to_#{option}", option.to_s.classify.constantize.pluck(:name), {include_blank: true}, { id: option }
              - else
                = f.select "to_#{option}", option.to_s.classify.constantize.pluck(:name), {include_blank: true}, { id: option }

          - Forms::Prison::Move::FREE_FORM_DESTINATION_TYPES.each do |option|
            = f.radio_concertina_option(:to_type, option) do
              label.form-label for="#{option}-text"
                = t(option, scope: 'move.destination_types.prompts')
              = f.text_field_without_label "to_#{option}".to_sym, id: "#{option}-text"

    = f.date_picker_text_field :date
    = render 'shared/radio_date_picker', picker: RadioDatePickerPresenter.new('move[date]', form.date)

    = f.radio_toggle :not_for_release,
      choices: f.object.toggle_choices do
      = f.radio_toggle_with_textarea :not_for_release_reason,
        legend: false,
        choices: f.object.not_for_release_reasons,
        inline_choices: false,
        data: { 'toggle-field' => f.object.not_for_release_reason_with_details }

    .form-actions
      = f.submit 'Save and continue', class: 'button'
