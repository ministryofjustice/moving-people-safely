header
  h1.govuk-heading-l Move information

= form_for form, url: submit_path, method: method do |f|
  = f.error_messages

  .govuk-form-group
    = f.govuk_label(:from_establishment)
    = escort.move&.from_establishment&.name

  .govuk-form-group
    fieldset.govuk-fieldset
      = f.govuk_fieldset_legend(:to_type)
      = f.govuk_error_message(:to_type)

      .govuk-radios data-module="radios"
        - form.sorted_destination_options.each do |option_details|
          - option = option_details.first
          - if option_details.last == :auto
            = f.radios_item_conditional(:to_type, option) do
              - select_tag = f.select "to_#{option}", option.to_s.classify.constantize.pluck(:name), {include_blank: true}, { id: option, class: 'govuk-select mps-autocomplete govuk-!-width-one-third' }
              label.govuk-label for=option
                = t(option, scope: 'move.destination_types.prompts')
              - if form.errors["to_#{option}"].any?
                .error
                  .span.error-message
                    = form.errors.full_messages_for("to_#{option}").join(', ')
                  = select_tag
              - else
                = select_tag

          - else
            = f.radios_item_conditional(:to_type, option) do
              label.form-label for="#{option}-text"
                = t(option, scope: 'move.destination_types.prompts')
              = f.text_field "to_#{option}".to_sym, id: "#{option}-text"

  = f.date_picker_text_field :date

  = f.radios_fieldset :not_for_release, toggle_choice: 'yes' do
    = f.radio_toggle_with_textarea :not_for_release_reason,
      choices: f.object.not_for_release_reasons,
      toggle_choice: f.object.not_for_release_reason_with_details

  - if escort.from_prison?
    - if escort.detainee_female?
      = f.radios_fieldset :travelling_with_child, toggle_choice: 'yes' do
        = f.text_field :child_full_name
        .govuk-form-group
          .date-picker
            = f.date_picker_text_field :child_date_of_birth

    = f.radio_toggle_with_textarea :require_special_vehicle
    = f.radio_toggle_with_textarea :other_transport_requirements

  .form-actions
    = f.submit 'Save and continue', class: 'govuk-button'
